{"version":3,"sources":["_constants/alert.constants.js","_constants/user.constants.js","_constants/index.js","_helpers/history.js","_reducers/authentication.reducer.js","_reducers/index.js","_reducers/users.reducer.js","_reducers/alert.reducer.js","_helpers/store.js","_helpers/auth-header.js","_services/user.service.js","_actions/user.actions.js","_actions/alert.actions.js","components/OnlineUsers.js","components/HomePage.js","components/NotFoundPage.js","navs/publicNav.js","navs/privateNav.js","navs/expandNavs.js","components/Header.js","components/Footer.js","routers/PublicRouter.js","routers/PrivateRouter.js","components/LoginPage.js","routers/AppRouter.js","theme/theme.js","App.js","serviceWorker.js","index.js"],"names":["alertConstants","SUCCESS","ERROR","CLEAR","userConstants","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT","GETALL_REQUEST","GETALL_SUCCESS","GETALL_FAILURE","API_URL","SOCKET_URL","history","createBrowserHistory","user","JSON","parse","localStorage","getItem","initialState","loggedIn","rootReducer","combineReducers","authentication","state","action","type","loggingIn","users","loading","items","error","alert","message","store","createStore","applyMiddleware","thunkMiddleware","authHeader","auth_token","userService","login","username","password","requestOptions","method","headers","body","stringify","fetch","then","handleResponse","setItem","logout","getAll","removeItem","response","text","data","ok","status","window","location","reload","statusText","Promise","reject","userActions","dispatch","success","push","failure","alertActions","clear","OnlineUsers","createSocket","yourToken","App","cable","ActionCable","createConsumer","messaging","subscriptions","create","channel","connected","disconnected","received","console","log","el","document","getElementById","innerHTML","forEach","value","node","createElement","textnode","createTextNode","appendChild","this","Fragment","id","React","Component","HomePage","props","Grid","container","spacing","item","xs","style","marginTop","Paper","className","Typography","variant","gutterBottom","align","map","index","key","name","email","connectedHomePage","connect","NotFoundPage","Link","to","publicNavs","url","icon","navItem","NavLink","activeClassName","List","component","ListItem","button","ListItemIcon","ListItemText","primary","color","ExpandNav","componentsmenuopen","handleClick","setState","handleClose","event","target1","contains","target","target2","Header","handleChange","onLeftIconButtonClick","open","toggleDrawer","conditRenderEssential","userid","Button","onClick","startLogout","Drawer","onClose","tabIndex","role","AppBar","position","Toolbar","IconButton","aria-label","isAuthenticated","rest","Route","Redirect","Footer","pathname","from","LoginPage","submitted","bind","handleSubmit","e","preventDefault","TextField","label","onChange","AppRouter","BrowserRouter","Switch","path","exact","theme","createMuiTheme","palette","main","secondary","sand","shell","danger","contrastThreshold","tonalOffset","MuiThemeProvider","Boolean","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6bc0d53f.chunk.js","sourcesContent":["export const alertConstants = {\n  SUCCESS: 'ALERT_SUCCESS',\n  ERROR: 'ALERT_ERROR',\n  CLEAR: 'ALERT_CLEAR'\n};","export const userConstants = {\n  LOGIN_REQUEST: 'USERS_LOGIN_REQUEST',\n  LOGIN_SUCCESS: 'USERS_LOGIN_SUCCESS',\n  LOGIN_FAILURE: 'USERS_LOGIN_FAILURE',\n\n  LOGOUT: 'USERS_LOGOUT',\n\n  GETALL_REQUEST: 'USERS_GETALL_REQUEST',\n  GETALL_SUCCESS: 'USERS_GETALL_SUCCESS',\n  GETALL_FAILURE: 'USERS_GETALL_FAILURE',\n};","export * from './alert.constants';\nexport * from './user.constants.js';\nexport const API_DOMAIN = 'advancion-dv.fluenceenergy.com'\nexport const API_URL = `https://${API_DOMAIN}`\nexport const SOCKET_URL = `wss://${API_DOMAIN}/cable`","\nimport { createBrowserHistory } from 'history';\n\nexport const history = createBrowserHistory();","import { userConstants } from '../_constants';\n\nlet user = JSON.parse(localStorage.getItem('user'));\nconst initialState = user ? { loggedIn: true, user } : {};\n\nexport function authentication(state = initialState, action) {\n  switch (action.type) {\n    case userConstants.LOGIN_REQUEST:\n      return {\n        loggingIn: true,\n        user: action.user\n      };\n    case userConstants.LOGIN_SUCCESS:\n      return {\n        loggedIn: true,\n        user: action.user\n      };\n    case userConstants.LOGIN_FAILURE:\n      return {};\n    case userConstants.LOGOUT:\n      return {};\n    default:\n      return state\n  }\n}","import { combineReducers } from 'redux';\n\nimport { authentication } from './authentication.reducer';\nimport { users } from './users.reducer';\nimport { alert } from './alert.reducer';\n\nconst rootReducer = combineReducers({\n  authentication,\n  users,\n  alert\n});\n\nexport default rootReducer;","import { userConstants } from '../_constants';\n\nexport function users(state = {}, action) {\n  switch (action.type) {\n    case userConstants.GETALL_REQUEST:\n      return {\n        loading: true\n      };\n    case userConstants.GETALL_SUCCESS:\n      return {\n        items: action.users\n      };\n    case userConstants.GETALL_FAILURE:\n      return {\n        error: action.error\n      };\n    default:\n      return state\n  }\n}","import { alertConstants } from '../_constants';\n\nexport function alert(state = {}, action) {\n  switch (action.type) {\n    case alertConstants.SUCCESS:\n      return {\n        type: 'alert-success',\n        message: action.message\n      };\n    case alertConstants.ERROR:\n      return {\n        type: 'alert-danger',\n        message: action.message\n      };\n    case alertConstants.CLEAR:\n      return {};\n    default:\n      return state\n  }\n}","import { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport rootReducer from '../_reducers';\n\n\nexport const store = createStore(\n  rootReducer,\n  applyMiddleware(\n    thunkMiddleware\n  )\n);","export function authHeader() {\n  // return authorization header with jwt token\n  let user = JSON.parse(localStorage.getItem('user'));\n\n  if (user && user.auth_token) {\n    return { 'Authorization': user.auth_token };\n  } else {\n    return {};\n  }\n}","import { API_URL } from '../_constants';\nimport { authHeader } from '../_helpers';\n\nexport const userService = {\n  login,\n  logout,\n  getAll\n};\n\nfunction login(username, password) {\n  const requestOptions = {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({ 'email': username, 'password': password })\n    // body: JSON.stringify({ \"user\": { 'email': username, 'password': password } })\n  };\n\n  return fetch(`${API_URL}/api/v1/auth`, requestOptions)\n    .then(handleResponse)\n    .then(user => {\n      // store user details and jwt token in local storage to keep user logged in between page refreshes\n      localStorage.setItem('user', JSON.stringify(user));\n\n      return user;\n    });\n}\n\nfunction logout() {\n  const requestOptions = {\n    method: 'DELETE',\n    headers: authHeader()\n  };\n  localStorage.removeItem('user');\n  return fetch(`${API_URL}/api/v1/auth`, requestOptions).then(handleResponse);\n  // remove user from local storage to log user out\n}\n\nfunction getAll() {\n  const requestOptions = {\n    method: 'GET',\n    headers: authHeader()\n  };\n\n  return fetch(`${API_URL}/api/v1/users`, requestOptions).then(handleResponse);\n}\n\nfunction handleResponse(response) {\n  return response.text().then(text => {\n    const data = text && JSON.parse(text);\n    if (!response.ok) {\n      if (response.status === 401) {\n        // auto logout if 401 response returned from api\n        logout();\n        window.location.reload(true);\n      }\n\n      const error = (data && data.message) || response.statusText;\n      return Promise.reject(error);\n    }\n\n    return data;\n  });\n}\n","import { userConstants } from '../_constants';\nimport { userService } from '../_services';\nimport { alertActions } from './';\nimport { history } from '../_helpers';\n\nexport const userActions = {\n  login,\n  logout,\n  getAll\n};\n\nfunction login(username, password) {\n  return dispatch => {\n    dispatch(request({ username }));\n\n    userService.login(username, password)\n      .then(\n        user => {\n          dispatch(success(user));\n          history.push('/');\n        },\n        error => {\n          dispatch(failure(error));\n          dispatch(alertActions.error(error));\n        }\n      );\n  };\n\n  function request(user) { return { type: userConstants.LOGIN_REQUEST, user } }\n  function success(user) { return { type: userConstants.LOGIN_SUCCESS, user } }\n  function failure(error) { return { type: userConstants.LOGIN_FAILURE, error } }\n}\n\nfunction logout() {\n  userService.logout();\n  return { type: userConstants.LOGOUT };\n}\n\nfunction getAll() {\n  return dispatch => {\n    dispatch(request());\n\n    userService.getAll()\n      .then(\n        users => dispatch(success(users)),\n        error => dispatch(failure(error))\n      );\n  };\n\n  function request() { return { type: userConstants.GETALL_REQUEST } }\n  function success(users) { return { type: userConstants.GETALL_SUCCESS, users } }\n  function failure(error) { return { type: userConstants.GETALL_FAILURE, error } }\n}","import { alertConstants } from '../_constants';\n\nexport const alertActions = {\n  success,\n  error,\n  clear\n};\n\nfunction success(message) {\n  return { type: alertConstants.SUCCESS, message };\n}\n\nfunction error(message) {\n  return { type: alertConstants.ERROR, message };\n}\n\nfunction clear() {\n  return { type: alertConstants.CLEAR };\n}","import React from 'react';\nimport ActionCable from 'action-cable-react-jwt'\nimport { SOCKET_URL } from '../_constants';\n\nclass OnlineUsers extends React.Component {\n  componentDidMount () { \n    this.createSocket()\n  }\n  createSocket = () => {\n    // get your JWT token\n    // this is an example using localStorage\n    let user = JSON.parse(localStorage.getItem('user'));\n    const yourToken = user.auth_token\n\n    let App = {}\n    App.cable = ActionCable.createConsumer(SOCKET_URL, yourToken)\n    App.messaging = App.cable.subscriptions.create({channel: 'OnlineUsersChannel'}, {\n      connected () {},\n      disconnected () {},\n      received (data) { \n        console.log(data)\n        let el = document.getElementById('online_users_section')\n        el.innerHTML = ''\n        data.forEach(function (value) {\n            let node = document.createElement(\"LI\");\n            let textnode = document.createTextNode(value);\n            node.appendChild(textnode);\n            el.appendChild(node);\n        });\n      }\n    })\n  }\n  \n  render() {\n    return (<React.Fragment>\n        <h3>Users from Online Users Channel:</h3>\n        <ul id='online_users_section'>\n        </ul>\n    </React.Fragment>)\n  }\n}\nexport default OnlineUsers;","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport { userActions } from '../_actions';\nimport { connect } from 'react-redux';\nimport OnlineUsers from './OnlineUsers'\n\nclass HomePage extends React.Component {\n  componentDidMount() {\n    this.props.dispatch(userActions.getAll());\n  }\n  render() {\n    const { users } = this.props;\n\n    return (<React.Fragment>\n\n      <Grid container spacing={24}>\n        <Grid item xs={12} style={{ marginTop: 10 }}>\n          <Paper className=\"homepagepaper\">\n            <Typography variant=\"body1\" gutterBottom align=\"center\">\n              You're logged in with React & JWT!!\n          </Typography>\n\n          </Paper>\n        </Grid>\n        <Grid item xs={12}>\n          <p>You're logged in with React & JWT!!</p>\n          <h3>Users from secure api end point:</h3>\n          {users.loading && <em>Loading users...</em>}\n          {users.error && <span className=\"text-danger\">ERROR: {users.error}</span>}\n          {users.items &&\n            <ul>\n              {users.items.map((user, index) =>\n                <li key={user.id}>\n                  {user.name + ' ' + user.email}\n                </li>\n              )}\n            </ul>\n          }\n          <OnlineUsers></OnlineUsers>\n        </Grid>\n      </Grid>\n    </React.Fragment>);\n  }\n}\nfunction mapStateToProps(state) {\n  const { users, authentication } = state;\n  const { user } = authentication;\n  return {\n    user,\n    users\n  };\n}\nconst connectedHomePage = connect(mapStateToProps)(HomePage);\nexport { connectedHomePage as HomePage };","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst NotFoundPage = () => (\n  <div>\n    404 - <Link to=\"/\">Go home</Link>\n  </div>\n);\n\nexport default NotFoundPage;\n","\nimport React from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport HomeIcon from '@material-ui/icons/Home';\n\n/* import your desired icon from material-ui icons library */\nimport { NavLink } from 'react-router-dom';\n\n\nexport const publicNavs = [\n  {\n    url: '/home',\n    name: 'Home',\n    icon: <HomeIcon />\n  },\n  // add new Nav links here as a json object, in this file the public navigations\n];\n\nexport default () => (\n  publicNavs.map((navItem) => {\n    return <NavLink to={navItem.url} className=\"NavLinkItem\" key={navItem.url} activeClassName=\"NavLinkItem-selected\"> <List component=\"nav\" >  <ListItem button>\n      <ListItemIcon className=\"innernavitem\">\n        {navItem.icon}\n      </ListItemIcon>\n      <ListItemText primary={navItem.name} className=\"innernavitem\" color=\"black\" />\n    </ListItem></List> </NavLink>\n  })\n);\n\n\n\n\n\n","\nimport React from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport HomeIcon from '@material-ui/icons/Home';\n\n/* import your desired icon from material-ui icons library */\nimport { NavLink } from 'react-router-dom';\n\n\nexport const publicNavs = [\n  {\n    url: '/home',\n    name: 'Home',\n    icon: <HomeIcon />\n  }\n\n  // add new Nav links here as a json object, in this file the public navigations\n];\n\nexport default () => (\n  publicNavs.map((navItem) => {\n    return <NavLink to={navItem.url} className=\"NavLinkItem\" key={navItem.url} activeClassName=\"NavLinkItem-selected\"> <List component=\"nav\" >  <ListItem button>\n      <ListItemIcon className=\"innernavitem\">\n        {navItem.icon}\n      </ListItemIcon>\n      <ListItemText primary={navItem.name} className=\"innernavitem\" color=\"black\" />\n    </ListItem></List> </NavLink>\n  })\n);\n\n\n\n\n\n","import React from 'react';\nimport List from '@material-ui/core/List';\n\nclass ExpandNav extends React.Component {\n\n  state = {\n    componentsmenuopen: false\n  };\n\n  handleClick = () => {\n    console.log('clicked');\n    this.setState({ componentsmenuopen: !this.state.componentsmenuopen });\n  };\n\n  handleClose = event => {\n    if (this.target1.contains(event.target) || this.target2.contains(event.target)) {\n      return;\n    }\n\n    this.setState({ componentsmenuopen: false });\n  };\n\n  render() {\n\n    return (<List component=\"nav\">\n    </List>);\n  }\n\n}\n\n\nexport default ExpandNav;\n\n","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\n\nimport { connect } from 'react-redux';\nimport Drawer from '@material-ui/core/Drawer';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\n\n\nimport { Link } from 'react-router-dom';\nimport PublicNavList from '../navs/publicNav';\nimport PrivateNavList from '../navs/privateNav';\nimport ExpandNavList from '../navs/expandNavs'\nimport { userActions } from '../_actions';\n\nclass Header extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: 1, open: false,\n      componentsmenuopen: false\n    };\n  }\n\n  handleChange = (event, index, value) => this.setState({ value });\n  onLeftIconButtonClick = (event, index, value) => {\n    console.log('hi;');\n    this.setState({ open: !this.state.open });\n\n  };\n\n  toggleDrawer = (open) => () => {\n    this.setState({\n      open: open,\n    });\n  };\n\n  handleClick = () => {\n    this.setState({ componentsmenuopen: !this.state.componentsmenuopen });\n  };\n\n  handleClose = event => {\n    if (this.target1.contains(event.target) || this.target2.contains(event.target)) {\n      return;\n    }\n\n    this.setState({ componentsmenuopen: false });\n  };\n  conditRenderEssential = () => this.props.userid ? (\n    <Button color=\"inherit\" align=\"right\" onClick={this.props.startLogout}> Logout</Button>) : (<Button color=\"inherit\" align=\"right\"><Link to=\"/login\"> Login</Link></Button>)\n\n  render() {\n\n    return (\n      <div>\n        <Drawer open={this.state.open} onClose={this.toggleDrawer(false)} >\n          <div\n            tabIndex={0}\n            role=\"button\"\n          >\n            <div className=\"sidelistwrapper\">\n              {!this.props.userid && (<React.Fragment><PublicNavList /> <ExpandNavList /></React.Fragment>)}\n\n              {this.props.userid && (<React.Fragment>\n                <PrivateNavList />\n              </React.Fragment>\n              )}\n\n\n            </div>\n          </div>\n        </Drawer>\n        <div className=\"appbarwrapper\">\n\n          <AppBar position=\"static\">\n            <Toolbar>\n              <IconButton className=\"iconbuttonsyle\" color=\"inherit\" aria-label=\"Menu\" onClick={this.onLeftIconButtonClick}>\n                <MenuIcon />\n              </IconButton>\n              <Typography variant=\"title\" color=\"inherit\" className=\"headertypoclass\" >\n                HMI\n          </Typography>\n\n              {\n                this.conditRenderEssential()\n              }\n\n            </Toolbar>\n          </AppBar>\n        </div>\n      </div>\n    );\n  };\n}\nconst mapStateToProps = (state) => ({\n  userid: localStorage.getItem('user')\n});\n\nconst mapDispatchToProps = (dispatch, props) => ({\n  startLogout: () => dispatch(userActions.logout())\n});\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\n\n\nexport default () => (\n\n  <div className=\"footer-container-box\">\n\n    <Typography variant=\"headline\" gutterBottom>\n      Fluence\n      </Typography>\n\n\n  </div>\n\n);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Redirect } from 'react-router-dom';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\n\nexport const PublicRoute = ({\n  component: Component,\n  ...rest\n}) => (\n\n\n    <Route {...rest} component={(props) => (\n      localStorage.getItem('user') ? (\n\n        <Redirect to=\"/home\" />\n\n      ) : (\n\n          <React.Fragment>\n            <Header />\n\n\n            <Component {...props} />\n\n\n            <Footer />\n          </React.Fragment>\n        )\n    )} />\n  );\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: !!localStorage.getItem('user')\n});\n\nexport default connect(mapStateToProps)(PublicRoute);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Redirect } from 'react-router-dom';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\n\nexport const PrivateRoute = ({\n  component: Component,\n  ...rest\n}) => (\n    <Route {...rest} component={(props) => (\n      localStorage.getItem('user') ? (\n        <div>\n          <Header />\n          <div className=\"bodyComponent\">\n            <Component {...props} />\n\n          </div>\n\n\n          <Footer />\n        </div>\n      ) : (\n          <Redirect to={{ pathname: '/login', state: { from: props.location } }} />\n        )\n    )} />\n  );\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: !!localStorage.getItem('user')\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { userActions } from '../_actions';\n\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport Key from '@material-ui/icons/VpnKey';\nimport Button from '@material-ui/core/Button';\n\nexport class LoginPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // reset login status\n    // this.props.dispatch(userActions.logout());\n\n    this.state = {\n      username: '',\n      password: '',\n      submitted: false\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e) {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    this.setState({ submitted: true });\n    const { username, password } = this.state;\n    const { dispatch } = this.props;\n    if (username && password) {\n      dispatch(userActions.login(username, password));\n    }\n  }\n\n  render() {\n    // const { loggingIn } = this.props;\n    const { username, password, submitted } = this.state;\n    return (\n      <div className=\"login-page-class\">\n        <Paper className=\"loginPaper\">\n          <div className=\"loginheaderpart\">\n            <Typography variant=\"display3\" gutterBottom className=\"loginpageheader\">\n              Login\n            </Typography>\n          </div>\n          <Typography variant=\"headline\" component=\"h3\">\n            Login to your account\n        </Typography>\n          <form>\n            <div className=\"loginformgroup\">\n\n              <AccountCircle />\n              <TextField id=\"input-username\" name='username' label=\"Username\" onChange={this.handleChange} />\n              {submitted && !username &&\n                <div className=\"help-block\">Username is required</div>\n              }\n\n            </div>\n            <div className=\"loginformgroup\">\n              <Key />\n              <TextField type=\"password\" name='password' id=\"input-password\" label=\"Password\" onChange={this.handleChange} />\n              {submitted && !password &&\n                <div className=\"help-block\">Password is required</div>\n              }\n            </div>\n          </form>\n          <Button variant=\"outlined\" color=\"primary\" onClick={this.handleSubmit}><Typography variant=\"button\" gutterBottom className=\"logintypography\">\n            Login\n      </Typography></Button>\n        </Paper>\n      </div>\n    );\n  }\n}\n\n// const mapDispatchToProps = (dispatch) => ({\n//   startLogin: (userid) => dispatch(login(userid))\n// });\nfunction mapStateToProps(state) {\n  const { loggingIn } = state.authentication;\n  return {\n    loggingIn\n  };\n}\n\n\nexport default connect(mapStateToProps)(LoginPage);","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport { HomePage } from '../components/HomePage';\nimport NotFoundPage from '../components/NotFoundPage';\n\nimport PublicRoute from './PublicRouter';\nimport PrivateRoute from './PrivateRouter';\nimport LoginPage from '../components/LoginPage';\n\n\n\nconst AppRouter = () => (\n  <BrowserRouter>\n    <div>\n\n      <Switch>\n        <PublicRoute path=\"/\" component={LoginPage} exact={true} />\n        <Route path=\"/login\" component={LoginPage} />\n        <PrivateRoute path=\"/home\" component={HomePage} />\n        <Route component={NotFoundPage} />\n      </Switch>\n\n    </div>\n  </BrowserRouter>\n);\n\nexport default AppRouter;","import { createMuiTheme } from '@material-ui/core/styles';\n\n\nexport const theme = createMuiTheme({\n  palette: {\n\n    type: 'light',\n    primary: {\n      main: '#1565c0' // customise your main color here\n    },\n    secondary: { main: '#673ab7' },\n\n    error: { main: '#ca0909' },\n\n    sand: { main: '#F4DECB' },\n    shell: { main: '#F8EEE7' },\n    status: {\n      danger: '#b71c1c'\n    },\n\n\n    // Used by `getContrastText()` to maximize the contrast between the background and\n    // the text.\n    contrastThreshold: 3,\n    // Used to shift a color's luminance by approximately\n    // two indexes within its tonal palette.\n    // E.g., shift from Red 500 to Red 300 or Red 700.\n    tonalOffset: 0.2,\n  },\n});","import React from 'react';\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport { Provider } from 'react-redux';\nimport AppRouter from './routers/AppRouter';\nimport { theme } from './theme/theme';\nimport { store } from './_helpers';\nimport './styles/styles.css';\nimport './App.css';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <MuiThemeProvider theme={theme}>\n        <AppRouter />\n      </MuiThemeProvider>\n    </Provider>\n  );\n}\nexport default App;\n\n// render(<App />, document.getElementById('app'));","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}